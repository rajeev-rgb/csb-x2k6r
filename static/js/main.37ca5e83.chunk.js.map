{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/card-header.component.jsx","components/card-list/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","CardHeader","SearchBox","handleChange","placeholder","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACpB,mCAAML,EAAMI,QAAQE,KAApB,WCFGC,EAAW,SAACP,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,SAASC,KAAI,SAACL,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCJ9BK,G,MAAa,kBACtB,wBAAQT,UAAU,cAAlB,0BCDSU,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OAErB,uBACIC,SAAUF,EACVX,UAAU,aACVc,KAAK,SACLF,YAAaA,MCiCNG,E,kDApCb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAcRY,aAAe,SAACK,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZ1D,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAK/C,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEW,aAAcgB,KAAKhB,aACnBC,YAAY,oBAEd,cAAC,EAAD,CAAUL,SAAUqB,W,GA/BVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.37ca5e83.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./card.component.css\";\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img alt='monster' src={`https://robohash.org/${ props.monster.id }?set=set2&size=180x180`} />\n        { <h2> {props.monster.name} </h2> }\n\n    </div>\n)","import React from \"react\";\n\nimport \"./card-list.component.css\";\nimport { Card } from \"./card.component\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card monster={monster} key={monster.id} />\n    ))}\n  </div>\n);\n","import React from 'react';\n\nimport \"./card-header.component.css\";\n\nexport const CardHeader = () => (\n    <header className=\"card-header\"> RoboHash </header>\n);","import React from 'react';\n\nimport \"./search-box.component.css\";\n\nexport const SearchBox = ({ handleChange, placeholder }) => (\n\n    <input\n        onChange={handleChange}\n        className=\"search-box\"\n        type=\"Search\"\n        placeholder={placeholder} />\n);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { CardHeader } from \"./components/card-list/card-header.component\";\nimport { SearchBox } from \"./components/card-list/search-box.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <CardHeader />\n        <SearchBox\n          handleChange={this.handleChange}\n          placeholder=\"Search Monsters\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CardList } from './components/card-list/card-list.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}